# main.py
from keep_alive import keep_alive
import telebot
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from datetime import datetime

# üîë –î–ê–ù–ù–´–ï
TOKEN = '7501058690:AAHvSQQxiL-9KymG46lg7b90RrTFGsGBjXg'
CHANNEL_USERNAME = '@ibragim_firsov'
ARTICLE_LINK = 'https://teletype.in/@ibragimfirsov/IbragimMoneyondesign'
PHOTO_FILE_ID = 'AgACAgIAAxkBAAOEZ_V_CERE4A1ozgyWt6ZnrE6MzLUAApbuMRtN4LBLJl0aPexTpBwBAAMCAAN4AAM2BA'

bot = telebot.TeleBot(TOKEN)

# üß† –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï –ö GOOGLE SHEETS
scope = ['https://spreadsheets.google.com/feeds', 'https://www.googleapis.com/auth/drive']
creds = ServiceAccountCredentials.from_json_keyfile_name('graphic-segment-456309-n3-64bdb79ff4e4.json', scope)
client = gspread.authorize(creds)
sheet = client.open_by_key('1nwFFM6cg6VBOTT6EqWF0QfTSvhGUvku_zU9t0RYTdXU').worksheet("–õ–∏—Å—Ç1")

# üî∑ –§–£–ù–ö–¶–ò–Ø –ó–ê–ü–ò–°–ò –í –¢–ê–ë–õ–ò–¶–£
def log_to_sheet(user):
    username = f"@{user.username}" if user.username else "[no username]"
    sheet.append_row([
        user.first_name,
        username,
        str(user.id),
        datetime.now().strftime("%d.%m.%Y %H:%M:%S")
    ])

# üîê –ü–†–û–í–ï–†–ö–ê –ü–û–î–ü–ò–°–ö–ò
def is_subscribed(user_id):
    try:
        member = bot.get_chat_member(CHANNEL_USERNAME, user_id)
        return member.status in ['member', 'creator', 'administrator']
    except:
        return False

# üìç –ö–û–ú–ê–ù–î–ê /start
@bot.message_handler(commands=['start'])
def start(message):
    user_id = message.from_user.id
    markup = telebot.types.InlineKeyboardMarkup()
    btn = telebot.types.InlineKeyboardButton('‚úÖ –ì–æ—Ç–æ–≤–æ', callback_data='check_sub')
    markup.add(btn)

    caption = (
        "–ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—å—é ‚Äî –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª @ibragim_firsov –∏ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ\n\n"
        "üìå ¬´–ö–∞–∫ –º—ã —Å–æ–±—Ä–∞–ª–∏ 50 —á–µ–ª–æ–≤–µ–∫ –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç —Å –Ω—É–ª—è¬ª"
    )
    bot.send_photo(user_id, PHOTO_FILE_ID, caption=caption, reply_markup=markup)

# üîπ –û–ë–†–ê–ë–û–¢–ß–ò–ö –ö–ù–û–ü–ö–ò "–ì–û–¢–û–í–û"
@bot.callback_query_handler(func=lambda call: call.data == 'check_sub')
def check_subscription(call):
    user_id = call.from_user.id
    if is_subscribed(user_id):
        log_to_sheet(call.from_user)
        bot.edit_message_caption(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            caption="üéâ –í–∏–∂—É —Ç–≤–æ—é –ø–æ–¥–ø–∏—Å–∫—É. –ó–∞–±–∏—Ä–∞–π —Å—Ç–∞—Ç—å—é:\n\n" + ARTICLE_LINK
        )
    else:
        bot.answer_callback_query(call.id, text="–¢—ã –µ—â—ë –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω!")
        markup = telebot.types.InlineKeyboardMarkup()
        btn = telebot.types.InlineKeyboardButton('‚úÖ –ì–æ—Ç–æ–≤–æ', callback_data='check_sub')
        markup.add(btn)
        bot.send_message(
            call.message.chat.id,
            f"–¢—ã –≤—Å—ë –µ—â—ë –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω(–∞) –Ω–∞ {CHANNEL_USERNAME}. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Å—å –∏ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É ¬´–ì–æ—Ç–æ–≤–æ¬ª.",
            reply_markup=markup
        )

# üöÄ –ó–ê–ü–£–°–ö
keep_alive()
bot.infinity_polling()
